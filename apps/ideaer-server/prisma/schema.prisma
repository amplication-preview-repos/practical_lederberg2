datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Comment {
  content   String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  idea      Idea?    @relation(fields: [ideaId], references: [id])
  ideaId    String?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Idea {
  comments    Comment[]
  createdAt   DateTime  @default(now())
  description String?
  id          String    @id @default(cuid())
  title       String?
  updatedAt   DateTime  @updatedAt
  user        User?     @relation(fields: [userId], references: [id])
  userId      String?
  votes       Vote[]
}

model Vote {
  createdAt DateTime           @default(now())
  id        String             @id @default(cuid())
  idea      Idea?              @relation(fields: [ideaId], references: [id])
  ideaId    String?
  typeField EnumVoteTypeField?
  updatedAt DateTime           @updatedAt
  user      User?              @relation(fields: [userId], references: [id])
  userId    String?
}

model User {
  comments       Comment[]
  createdAt      DateTime  @default(now())
  email          String?   @unique
  firstName      String?
  id             String    @id @default(cuid())
  ideas          Idea[]
  lastName       String?
  level          Int?
  password       String
  points         Int?
  profilePicture Json?
  roles          Json
  updatedAt      DateTime  @updatedAt
  username       String    @unique
  votes          Vote[]
}

enum EnumVoteTypeField {
  Option1
}
